*진행 내용*

1. HTML(html5) API 
    - 브라우저 메모리에 DATA를 저장하고 활용할 수 있는 기술
    - 서버가 응답한 data를 브라우저 body에서 사용하는게 아닌 인증 자원등으로 사용시에 
    client에겐 은닉되어 활용하기 위한 data들 필요시 주로 사용

2. flask 개발 및 실행 구조!
    프로젝트
         static
            css
                *.css
            js
                *.js
         template
            *.html
         app.py
         dao.py
         dto.py

    1. html 파일
        분리된 js와 css를 사용하기 위한 코드
        1. CSS
            <link rel="stylesheet" href="{{url_for('static' , filename='css/emp.css')}}">
        2. JS   
            <script src="{{url_for('static' , filename='js/emp.js')}}"></script>

        - css, js가 저장된 경로는 static 폴더명이 필수! 그 하위 구조는 권장 사항을 따르면 됨.

3. http 프로토콜 기반의 상태 유지 기술 용어
    1. 세션 :
        서버의 메모리에 저장
        저장 타입에 대한 제한이 없음
        비용이 많이 들고 상태유지 개발 기술이 매우 어려움


    2. 쿠키 :
        client 시스템에 저장
        ms os는 자사 브라우저 메모리 + os 자체의 쿠키 디렉토리에 저장
        타사 브라우저의 경우 메모리에만 저장
        저장하고자 하는 data 양이 아주 다량이 아닌 경우 client 시스템 활용 >>> server 자원 절감 효과

    3. 토큰 : jwt(json web token)
        쿠키의 보안을 고려하고 세션의 서버단 회사의 비용 절감 측면에서 장점만을 적용한 새로운 인증 방식!
        접속 기기 수와 종류가 다양해져 표준화된 방식의 data로 상태 유지관리
        
        json 포맷으로 인증 정보 관리 
        - 로그인시도 >> 서버가 인증 >> jws 토큰 생성 >>  client 시스템에 전송
          >>client 시스템에 저장 >> 토큰을 지속적으로 전송하며 서버에게 인증
        - 토큰 값이 변경이 되면 보안 정책에 위배된 상태가 되므로 불허!
        - http://jwt.io
